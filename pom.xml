<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>io.micronaut</groupId>
        <artifactId>micronaut-parent</artifactId>
        <version>3.7.2</version>
    </parent>

    <groupId>org.fiware.iam</groupId>
    <artifactId>trusted-issuers-registry</artifactId>
    <version>0.0.1</version>

    <description>${project.description}</description>
    <url>${project.url}</url>
    <licenses>
        <license>
            <name>${project.license.name}</name>
            <url>${project.license.url}</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>${project.author.name}</name>
            <email>${project.author.email}</email>
        </developer>
    </developers>

    <properties>
        <jdk.version>17</jdk.version>
        <release.version>17</release.version>
        <micronaut.version>3.7.2</micronaut.version>

        <!-- project info -->
        <project.author.name>Tim Smyth</project.author.name>
        <project.author.email>tim.smyth@fiware.org</project.author.email>
        <project.description>EBSI TrustedIssuersRegistry API Impl with Context broker backend
        </project.description>
        <project.summary>EBSI TrustedIssuersRegistry API Impl with Context broker backend.</project.summary>
        <project.url>https://github.com/fiware/trusted-issuers-registry</project.url>
        <project.license.name>Apache License 2.0</project.license.name>
        <project.license.identifier>Apache License 2.0</project.license.identifier>
        <project.license.url>https://www.apache.org/licenses/LICENSE-2.0</project.license.url>
        <project.title>FIWARE Trusted Issuers Registry</project.title>
        <project.vendor>FIWARE Foundation, e.V.</project.vendor>
        <project.contact.domain>fiware.org</project.contact.domain>
        <project.contact.email>tim.smyth@fiware.org</project.contact.email>

        <!-- div -->
        <version.io.kokuwa.micronaut.logging>3.0.4</version.io.kokuwa.micronaut.logging>
        <ngsi-ld-java-mapping.version>0.1.2</ngsi-ld-java-mapping.version>
        <commons-codec.version>1.15</commons-codec.version>
        <logback-classic.version>1.2.3</logback-classic.version>
        <javax.inject.version>1</javax.inject.version>
        <findbugs.annotations.version>3.0.1u2</findbugs.annotations.version>
        <jaxb-api.version>2.3.1</jaxb-api.version>
        <java-jwt.version>4.4.0</java-jwt.version>
        <nimbus-jose-jwt.version>9.31</nimbus-jose-jwt.version>
        <bcprov-jdk15on.version>1.70</bcprov-jdk15on.version>

        <!-- Test -->
        <version.io.kokuwa.maven.k3s-plugin>0.7.0</version.io.kokuwa.maven.k3s-plugin>
        <version.org.jacoco.maven-plugin>0.8.8</version.org.jacoco.maven-plugin>
        <version.org.mockito.mockito-all>1.10.19</version.org.mockito.mockito-all>
        <version.org.awaitility>4.0.3</version.org.awaitility>
        <assertj-core.version>3.11.1</assertj-core.version>
        <version.org.eluder.coveralls.maven-plugin>4.3.0</version.org.eluder.coveralls.maven-plugin>

        <!-- docker -->
        <exec.mainClass>org.fiware.iam.tir.Application</exec.mainClass>
        <image.registry>quay.io</image.registry>
        <image.repository>fiware</image.repository>

        <!-- lazy dev -->
        <version.org.mapstruct>1.5.3.Final</version.org.mapstruct>
        <version.org.projectlombok>1.18.26</version.org.projectlombok>
        <!-- code gen -->
        <version.org.openapitools.generator-maven-plugin>6.1.0</version.org.openapitools.generator-maven-plugin>
        <version.io.kokuwa.micronaut.codegen>3.2.2</version.io.kokuwa.micronaut.codegen>


    </properties>

    <dependencies>

        <!-- lazy dev -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.org.projectlombok}</version>
        </dependency>
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${version.org.mapstruct}</version>
        </dependency>


        <!-- NGSI LD Connector -->
        <dependency>
            <groupId>io.github.wistefan</groupId>
            <artifactId>ngsi-ld-java-mapping</artifactId>
            <version>${ngsi-ld-java-mapping.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons-codec.version}</version>
        </dependency>

        <!-- micronaut -->
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-validation</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.security</groupId>
            <artifactId>micronaut-security</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.security</groupId>
            <artifactId>micronaut-security-jwt</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.security</groupId>
            <artifactId>micronaut-security-ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.graalvm.nativeimage</groupId>
            <artifactId>svm</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-runtime</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-management</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-jackson-core</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.reactor</groupId>
            <artifactId>micronaut-reactor</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-jackson-databind</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-client</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.reactivex.rxjava2</groupId>
            <artifactId>rxjava</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Metering -->
        <dependency>
            <groupId>io.micronaut.micrometer</groupId>
            <artifactId>micronaut-micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.micrometer</groupId>
            <artifactId>micronaut-micrometer-registry-statsd</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micronaut.micrometer</groupId>
            <artifactId>micronaut-micrometer-registry-prometheus</artifactId>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- mn copy -->
        <dependency>
            <groupId>io.micronaut.cache</groupId>
            <artifactId>micronaut-cache-caffeine</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.kokuwa.micronaut</groupId>
            <artifactId>micronaut-logging</artifactId>
            <version>${version.io.kokuwa.micronaut.logging}</version>
            <scope>compile</scope>
        </dependency>

        <!-- javax -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>${javax.inject.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <!-- required for javax.nullable -->
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>${findbugs.annotations.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb-api.version}</version>
        </dependency>
        <!-- JWT -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${java-jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>${nimbus-jose-jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>${bcprov-jdk15on.version}</version>
        </dependency>

        <!-- Tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${version.org.mockito.mockito-all}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${version.org.awaitility}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!-- generate sources from openapi spec -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>${version.org.openapitools.generator-maven-plugin}</version>
                <executions>
                    <execution>
                        <id>openapi</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>./api/trusted-issuers-registry.yaml</inputSpec>
                            <apiPackage>org.fiware.iam.tir.api</apiPackage>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.tir.model</modelPackage>
                            <generateAliasAsModel>true</generateAliasAsModel>
                            <generateApiTests>true</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>

                            <configOptions>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>false</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>did-registry</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>./api/did-registry.yaml</inputSpec>
                            <apiPackage>org.fiware.iam.did.api</apiPackage>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.did.model</modelPackage>
                            <generateAliasAsModel>true</generateAliasAsModel>
                            <generateApiTests>true</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>

                            <configOptions>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>false</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                    <execution>
                        <id>satellite-api</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>./api/satellite.yaml</inputSpec>
                            <apiPackage>org.fiware.iam.satellite.api</apiPackage>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.iam.satellite.model</modelPackage>
                            <generateAliasAsModel>true</generateAliasAsModel>
                            <generateApiTests>true</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <generatorName>micronaut</generatorName>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <output>${project.build.directory}</output>
                            <configOptions>
                                <fullJavaUtil>true</fullJavaUtil>
                                <useOptional>false</useOptional>
                                <useGenericResponse>true</useGenericResponse>
                                <useLombokGenerated>true</useLombokGenerated>
                                <introspected>true</introspected>
                                <useBeanValidation>false</useBeanValidation>
                                <supportAsync>false</supportAsync>
                                <jacksonDatabindNullable>false</jacksonDatabindNullable>
                                <generateExamples>true</generateExamples>
                            </configOptions>
                            <typeMappings>
                                <typeMapping>java.util.Date=java.time.Instant</typeMapping>
                            </typeMappings>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>io.kokuwa.micronaut</groupId>
                        <artifactId>micronaut-openapi-codegen</artifactId>
                        <version>${version.io.kokuwa.micronaut.codegen}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <!-- add generated sources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>openapi-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-test-sources/openapi</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.micronaut.build</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Uncomment to enable incremental compilation -->
                    <!-- <useIncrementalCompilation>false</useIncrementalCompilation> -->
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.org.projectlombok}</version>
                        </path>
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${version.org.mapstruct}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-inject-java</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-validation</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-graal</artifactId>
                            <version>${micronaut.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
                <executions>
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${version.org.projectlombok}</version>
                                </path>
                                <path>
                                    <groupId>org.mapstruct</groupId>
                                    <artifactId>mapstruct-processor</artifactId>
                                    <version>${version.org.mapstruct}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-inject-java</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-validation</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                                <path>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-graal</artifactId>
                                    <version>${micronaut.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>org.fiware.iam.tir.Application</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.org.jacoco.maven-plugin}</version>
                <configuration>
                    <!-- exclude generated code -->
                    <excludes>
                        <exclude>org/fiware/**/api/*</exclude>
                        <exclude>org/fiware/**/model/*</exclude>
                        <!-- needs to be excluded, breaks coveralls linking -->
                        <exclude>**/TrustedIssuerMapperImpl*</exclude>
                        <exclude>**/NGSIMapperImpl*</exclude>
                        <exclude>changeMe/*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>failsafe.jacoco.args</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>merge-reports</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.basedir}/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- copy project dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>micronaut-lib</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <silent>true</silent>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- this is very important to avoid classpath conflicts between the micronaut-test-context and the beans present inside the shaded-jar -->
                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                    <failIfNoTests>true</failIfNoTests>
                    <argLine>${failsafe.jacoco.args} --add-opens java.base/java.lang=ALL-UNNAMED --add-opens
                        java.base/java.time=ALL-UNNAMED
                    </argLine>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <configuration combine.self="override">
                    <from>
                        <image>registry.access.redhat.com/ubi8/openjdk-17:1.13</image>
                    </from>
                    <to>
                        <image>${image.registry}/${image.repository}/${project.artifactId}</image>
                        <tags>
                            <tag>${project.version}</tag>
                        </tags>
                    </to>
                    <!--                    <extraDirectories>
                                            <paths>
                                                <path>
                                                    <from>LICENSE</from>
                                                    <into>/licenses</into>
                                                </path>
                                            </paths>
                                        </extraDirectories>-->
                    <container>
                        <labels>
                            <!-- oci labels -->
                            <org.opencontainers.image.authors>${project.author.name} - ${project.author.email}
                            </org.opencontainers.image.authors>
                            <org.opencontainers.image.description>${project.description}
                            </org.opencontainers.image.description>
                            <org.opencontainers.image.documentation>${project.url}
                            </org.opencontainers.image.documentation>
                            <org.opencontainers.image.licenses>${project.license.identifier}
                            </org.opencontainers.image.licenses>
                            <org.opencontainers.image.source>${project.url}</org.opencontainers.image.source>
                            <org.opencontainers.image.title>${project.title}</org.opencontainers.image.title>
                            <org.opencontainers.image.vendor>${project.vendor}</org.opencontainers.image.vendor>
                            <org.opencontainers.image.version>${project.version}</org.opencontainers.image.version>
                            <org.opencontainers.image.created>${maven.build.timestamp}
                            </org.opencontainers.image.created>
                            <org.fiware.contact.localpart>${project.contact.email}</org.fiware.contact.localpart>
                            <org.fiware.contact.domain>${project.contact.domain}</org.fiware.contact.domain>
                            <!-- redhat required labels -->
                            <name>${project.title}</name>
                            <description>${project.description}</description>
                            <authors>${project.author.name} - ${project.author.email}</authors>
                            <maintainer>${project.author.email}</maintainer>
                            <documentation>${project.url}</documentation>
                            <vendor>${project.vendor}</vendor>
                            <summary>${project.summary}</summary>
                        </labels>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.kokuwa.maven</groupId>
                <artifactId>k3s-maven-plugin</artifactId>
                <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                <executions>
                    <execution>
                        <id>prepare-test-cluster</id>
                        <goals>
                            <goal>create</goal>
                            <goal>start</goal>
                            <goal>image</goal>
                            <goal>kubectl</goal>
                        </goals>
                        <configuration>
                            <manifests>${project.basedir}/src/test/resources/k3s</manifests>
                            <streamLogs>true</streamLogs>
                            <portBindings>
                                <portBinding>1026:1026</portBinding>
                            </portBindings>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
<profiles>
    <profile>
        <id>report-coveralls</id>
        <build>
            <plugins>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.org.jacoco.maven-plugin}</version>
                    <configuration>
                        <fileSets>
                            <fileSet>
                                <directory>${project.basedir}</directory>
                                <includes>
                                    <include>**/*.exec</include>
                                </includes>
                            </fileSet>
                        </fileSets>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>${version.org.eluder.coveralls.maven-plugin}</version>
                    <configuration>
                        <repoToken>${coveralls.token}</repoToken>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>javax.xml.bind</groupId>
                            <artifactId>jaxb-api</artifactId>
                            <version>2.3.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </build>
    </profile>
</profiles>
</project>
